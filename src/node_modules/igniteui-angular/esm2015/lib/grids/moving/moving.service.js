import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * This enumeration is used to configure whether the drop position is set before or after
 * the target.
 */
export var DropPosition;
(function (DropPosition) {
    DropPosition[DropPosition["BeforeDropTarget"] = 0] = "BeforeDropTarget";
    DropPosition[DropPosition["AfterDropTarget"] = 1] = "AfterDropTarget";
})(DropPosition || (DropPosition = {}));
/**
 * @hidden
 * @internal
 */
export class IgxColumnMovingService {
    get column() {
        return this._column;
    }
    set column(val) {
        if (val) {
            this._column = val;
        }
    }
    get icon() {
        return this._icon;
    }
    set icon(val) {
        if (val) {
            this._icon = val;
        }
    }
}
IgxColumnMovingService.ɵprov = i0.ɵɵdefineInjectable({ factory: function IgxColumnMovingService_Factory() { return new IgxColumnMovingService(); }, token: IgxColumnMovingService, providedIn: "root" });
IgxColumnMovingService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW92aW5nLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvbW92aW5nL21vdmluZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRzNDOzs7R0FHRztBQUNILE1BQU0sQ0FBTixJQUFZLFlBR1g7QUFIRCxXQUFZLFlBQVk7SUFDcEIsdUVBQWdCLENBQUE7SUFDaEIscUVBQWUsQ0FBQTtBQUNuQixDQUFDLEVBSFcsWUFBWSxLQUFaLFlBQVksUUFHdkI7QUFHRDs7O0dBR0c7QUFJSCxNQUFNLE9BQU8sc0JBQXNCO0lBTy9CLElBQVcsTUFBTTtRQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBQ0QsSUFBVyxNQUFNLENBQUMsR0FBdUI7UUFDckMsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztTQUN0QjtJQUNMLENBQUM7SUFFRCxJQUFXLElBQUk7UUFDWCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUNELElBQVcsSUFBSSxDQUFDLEdBQVE7UUFDcEIsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztTQUNwQjtJQUNMLENBQUM7Ozs7WUExQkosVUFBVSxTQUFDO2dCQUNSLFVBQVUsRUFBRSxNQUFNO2FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50JztcblxuLyoqXG4gKiBUaGlzIGVudW1lcmF0aW9uIGlzIHVzZWQgdG8gY29uZmlndXJlIHdoZXRoZXIgdGhlIGRyb3AgcG9zaXRpb24gaXMgc2V0IGJlZm9yZSBvciBhZnRlclxuICogdGhlIHRhcmdldC5cbiAqL1xuZXhwb3J0IGVudW0gRHJvcFBvc2l0aW9uIHtcbiAgICBCZWZvcmVEcm9wVGFyZ2V0LFxuICAgIEFmdGVyRHJvcFRhcmdldFxufVxuXG5cbi8qKlxuICogQGhpZGRlblxuICogQGludGVybmFsXG4gKi9cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIElneENvbHVtbk1vdmluZ1NlcnZpY2Uge1xuICAgIHB1YmxpYyBjYW5jZWxEcm9wOiBib29sZWFuO1xuICAgIHB1YmxpYyBpc0NvbHVtbk1vdmluZzogYm9vbGVhbjtcblxuICAgIHByaXZhdGUgX2ljb246IGFueTtcbiAgICBwcml2YXRlIF9jb2x1bW46IElneENvbHVtbkNvbXBvbmVudDtcblxuICAgIHB1YmxpYyBnZXQgY29sdW1uKCk6IElneENvbHVtbkNvbXBvbmVudCB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2x1bW47XG4gICAgfVxuICAgIHB1YmxpYyBzZXQgY29sdW1uKHZhbDogSWd4Q29sdW1uQ29tcG9uZW50KSB7XG4gICAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvbHVtbiA9IHZhbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaWNvbigpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5faWNvbjtcbiAgICB9XG4gICAgcHVibGljIHNldCBpY29uKHZhbDogYW55KSB7XG4gICAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgICAgIHRoaXMuX2ljb24gPSB2YWw7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=