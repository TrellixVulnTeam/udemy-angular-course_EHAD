import { ChangeDetectorRef, Component, HostBinding, ViewChild, ViewContainerRef } from '@angular/core';
import { IgxScrollInertiaDirective } from '../scroll-inertia/scroll_inertia.directive';
export class DisplayContainerComponent {
    constructor(cdr, _viewContainer) {
        this.cdr = cdr;
        this._viewContainer = _viewContainer;
        this.cssClass = 'igx-display-container';
        this.notVirtual = true;
    }
}
DisplayContainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'igx-display-container',
                template: `
        <ng-template
            #display_container
            igxScrollInertia
            [IgxScrollInertiaScrollContainer]="scrollContainer"
            [IgxScrollInertiaDirection]="scrollDirection">
        </ng-template>
    `
            },] }
];
DisplayContainerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ViewContainerRef }
];
DisplayContainerComponent.propDecorators = {
    _vcr: [{ type: ViewChild, args: ['display_container', { read: ViewContainerRef, static: true },] }],
    _scrollInertia: [{ type: ViewChild, args: ['display_container', { read: IgxScrollInertiaDirective, static: true },] }],
    cssClass: [{ type: HostBinding, args: ['class',] }],
    notVirtual: [{ type: HostBinding, args: ['class.igx-display-container--inactive',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcGxheS5jb250YWluZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZGlyZWN0aXZlcy9mb3Itb2YvZGlzcGxheS5jb250YWluZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsV0FBVyxFQUNYLFNBQVMsRUFDVCxnQkFBZ0IsRUFDbkIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFhdkYsTUFBTSxPQUFPLHlCQUF5QjtJQWlCbEMsWUFBbUIsR0FBc0IsRUFBUyxjQUFnQztRQUEvRCxRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUFTLG1CQUFjLEdBQWQsY0FBYyxDQUFrQjtRQVQzRSxhQUFRLEdBQUcsdUJBQXVCLENBQUM7UUFHbkMsZUFBVSxHQUFHLElBQUksQ0FBQztJQU02RCxDQUFDOzs7WUE1QjFGLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsdUJBQXVCO2dCQUNqQyxRQUFRLEVBQUU7Ozs7Ozs7S0FPVDthQUNKOzs7WUFsQkcsaUJBQWlCO1lBSWpCLGdCQUFnQjs7O21CQWdCZixTQUFTLFNBQUMsbUJBQW1CLEVBQUUsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs2QkFHdkUsU0FBUyxTQUFDLG1CQUFtQixFQUFFLEVBQUUsSUFBSSxFQUFFLHlCQUF5QixFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7dUJBR2hGLFdBQVcsU0FBQyxPQUFPO3lCQUduQixXQUFXLFNBQUMsdUNBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgVmlld0NoaWxkLFxuICAgIFZpZXdDb250YWluZXJSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hTY3JvbGxJbmVydGlhRGlyZWN0aXZlIH0gZnJvbSAnLi4vc2Nyb2xsLWluZXJ0aWEvc2Nyb2xsX2luZXJ0aWEuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdpZ3gtZGlzcGxheS1jb250YWluZXInLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgI2Rpc3BsYXlfY29udGFpbmVyXG4gICAgICAgICAgICBpZ3hTY3JvbGxJbmVydGlhXG4gICAgICAgICAgICBbSWd4U2Nyb2xsSW5lcnRpYVNjcm9sbENvbnRhaW5lcl09XCJzY3JvbGxDb250YWluZXJcIlxuICAgICAgICAgICAgW0lneFNjcm9sbEluZXJ0aWFEaXJlY3Rpb25dPVwic2Nyb2xsRGlyZWN0aW9uXCI+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgYFxufSlcbmV4cG9ydCBjbGFzcyBEaXNwbGF5Q29udGFpbmVyQ29tcG9uZW50IHtcbiAgICBAVmlld0NoaWxkKCdkaXNwbGF5X2NvbnRhaW5lcicsIHsgcmVhZDogVmlld0NvbnRhaW5lclJlZiwgc3RhdGljOiB0cnVlIH0pXG4gICAgcHVibGljIF92Y3I7XG5cbiAgICBAVmlld0NoaWxkKCdkaXNwbGF5X2NvbnRhaW5lcicsIHsgcmVhZDogSWd4U2Nyb2xsSW5lcnRpYURpcmVjdGl2ZSwgc3RhdGljOiB0cnVlIH0pXG4gICAgcHVibGljIF9zY3JvbGxJbmVydGlhOiBJZ3hTY3JvbGxJbmVydGlhRGlyZWN0aXZlO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXG4gICAgcHVibGljIGNzc0NsYXNzID0gJ2lneC1kaXNwbGF5LWNvbnRhaW5lcic7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1kaXNwbGF5LWNvbnRhaW5lci0taW5hY3RpdmUnKVxuICAgIHB1YmxpYyBub3RWaXJ0dWFsID0gdHJ1ZTtcblxuICAgIHB1YmxpYyBzY3JvbGxEaXJlY3Rpb246IHN0cmluZztcblxuICAgIHB1YmxpYyBzY3JvbGxDb250YWluZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgcHVibGljIF92aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmKSB7IH1cbn1cbiJdfQ==