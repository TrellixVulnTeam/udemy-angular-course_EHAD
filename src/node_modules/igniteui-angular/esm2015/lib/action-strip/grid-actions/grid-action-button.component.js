import { Component, Input, ViewChild, Output, EventEmitter } from '@angular/core';
export class IgxGridActionButtonComponent {
    constructor() {
        /**
         * Event emitted when action button is clicked.
         *
         * @example
         * ```html
         *  <igx-grid-action-button (actionClick)="startEdit($event)"></igx-grid-action-button>
         * ```
         */
        this.actionClick = new EventEmitter();
        /**
         * Whether button action is rendered in menu and should container text label.
         */
        this.asMenuItem = false;
    }
    /** @hidden @internal */
    get containerClass() {
        return 'igx-action-strip__menu-button ' + (this.classNames || '');
    }
    /**
     * @hidden
     * @internal
     */
    handleClick(event) {
        this.actionClick.emit(event);
    }
    /**
     * @hidden @internal
     */
    preventEvent(event) {
        if (event) {
            event.stopPropagation();
            event.preventDefault();
        }
    }
}
IgxGridActionButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'igx-grid-action-button',
                template: "<ng-container *ngIf=\"!asMenuItem\">\n    <button igxButton=\"icon\" igxRipple (click)=\"handleClick($event)\" (mousedown)=\"preventEvent($event)\">\n        <igx-icon *ngIf=\"iconSet\" [family]=\"iconSet\" [name]=\"iconName\">{{iconName}}</igx-icon>\n        <igx-icon *ngIf=\"!iconSet\" >{{iconName}}</igx-icon>\n    </button>\n</ng-container>\n\n<ng-template #menuItemTemplate>\n    <ng-container *ngIf=\"asMenuItem\">\n        <div #container [className]='containerClass'>\n            <igx-icon *ngIf=\"iconSet\" [family]=\"iconSet\" [name]=\"iconName\">{{iconName}}</igx-icon>\n            <igx-icon *ngIf=\"!iconSet\" >{{iconName}}</igx-icon>\n            <label igxLabel>{{labelText}}</label>\n        </div>\n    </ng-container>\n</ng-template>"
            },] }
];
IgxGridActionButtonComponent.propDecorators = {
    container: [{ type: ViewChild, args: ['container',] }],
    actionClick: [{ type: Output }],
    templateRef: [{ type: ViewChild, args: ['menuItemTemplate',] }],
    asMenuItem: [{ type: Input }],
    iconName: [{ type: Input }],
    classNames: [{ type: Input }],
    iconSet: [{ type: Input }],
    labelText: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1hY3Rpb24tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9hY3Rpb24tc3RyaXAvZ3JpZC1hY3Rpb25zL2dyaWQtYWN0aW9uLWJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQWMsTUFBTSxlQUFlLENBQUM7QUFNM0csTUFBTSxPQUFPLDRCQUE0QjtJQUx6QztRQVVJOzs7Ozs7O1dBT0c7UUFFSSxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFTLENBQUM7UUFXL0M7O1dBRUc7UUFFSSxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBZ0Q5QixDQUFDO0lBbENHLHdCQUF3QjtJQUN4QixJQUFXLGNBQWM7UUFDckIsT0FBTyxnQ0FBZ0MsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQWNEOzs7T0FHRztJQUNJLFdBQVcsQ0FBQyxLQUFLO1FBQ3JCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRDs7T0FFRztJQUNJLFlBQVksQ0FBQyxLQUFLO1FBQ3JCLElBQUksS0FBSyxFQUFFO1lBQ1AsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3hCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUMxQjtJQUNMLENBQUM7OztZQWpGSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMsNnZCQUFnRDthQUNuRDs7O3dCQUlJLFNBQVMsU0FBQyxXQUFXOzBCQVdyQixNQUFNOzBCQVNOLFNBQVMsU0FBQyxrQkFBa0I7eUJBTTVCLEtBQUs7dUJBTUwsS0FBSzt5QkFNTCxLQUFLO3NCQVdMLEtBQUs7d0JBTUwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC1ncmlkLWFjdGlvbi1idXR0b24nLFxuICAgIHRlbXBsYXRlVXJsOiAnZ3JpZC1hY3Rpb24tYnV0dG9uLmNvbXBvbmVudC5odG1sJ1xufSlcblxuZXhwb3J0IGNsYXNzIElneEdyaWRBY3Rpb25CdXR0b25Db21wb25lbnQge1xuXG4gICAgQFZpZXdDaGlsZCgnY29udGFpbmVyJylcbiAgICBwdWJsaWMgY29udGFpbmVyOiBFbGVtZW50UmVmO1xuXG4gICAgLyoqXG4gICAgICogRXZlbnQgZW1pdHRlZCB3aGVuIGFjdGlvbiBidXR0b24gaXMgY2xpY2tlZC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgaHRtbFxuICAgICAqICA8aWd4LWdyaWQtYWN0aW9uLWJ1dHRvbiAoYWN0aW9uQ2xpY2spPVwic3RhcnRFZGl0KCRldmVudClcIj48L2lneC1ncmlkLWFjdGlvbi1idXR0b24+XG4gICAgICogYGBgXG4gICAgICovXG4gICAgQE91dHB1dCgpXG4gICAgcHVibGljIGFjdGlvbkNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxFdmVudD4oKTtcblxuICAgIC8qKlxuICAgICAqIFJlZmVyZW5jZSB0byB0aGUgY3VycmVudCB0ZW1wbGF0ZS5cbiAgICAgKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBAVmlld0NoaWxkKCdtZW51SXRlbVRlbXBsYXRlJylcbiAgICBwdWJsaWMgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIGJ1dHRvbiBhY3Rpb24gaXMgcmVuZGVyZWQgaW4gbWVudSBhbmQgc2hvdWxkIGNvbnRhaW5lciB0ZXh0IGxhYmVsLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGFzTWVudUl0ZW0gPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIE5hbWUgb2YgdGhlIGljb24gdG8gZGlzcGxheSBpbiB0aGUgYnV0dG9uLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGljb25OYW1lOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBBZGRpdGlvbmFsIE1lbnUgaXRlbSBjb250YWluZXIgZWxlbWVudCBjbGFzc2VzLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGNsYXNzTmFtZXM6IHN0cmluZztcblxuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIHB1YmxpYyBnZXQgY29udGFpbmVyQ2xhc3MoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuICdpZ3gtYWN0aW9uLXN0cmlwX19tZW51LWJ1dHRvbiAnICsgKHRoaXMuY2xhc3NOYW1lcyB8fCAnJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGljb24gc2V0LiBVc2VkIGluIGNhc2UgdGhlIGljb24gaXMgZnJvbSBhIGRpZmZlcmVudCBpY29uIHNldC5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBpY29uU2V0OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBvZiB0aGUgbGFiZWwuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgbGFiZWxUZXh0OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgcHVibGljIGhhbmRsZUNsaWNrKGV2ZW50KSB7XG4gICAgICAgdGhpcy5hY3Rpb25DbGljay5lbWl0KGV2ZW50KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIHB1YmxpYyBwcmV2ZW50RXZlbnQoZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50KSB7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=