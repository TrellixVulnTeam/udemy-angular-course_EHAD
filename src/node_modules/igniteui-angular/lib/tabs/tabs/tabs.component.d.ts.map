{"version":3,"file":"tabs.component.d.ts","sources":["tabs.component.d.ts"],"names":[],"mappingssourcesContent":["import { AnimationBuilder } from '@angular/animations';\nimport { AfterViewInit, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { IgxTabsDirective } from '../tabs.directive';\nexport declare const IgxTabsAlignment: {\n    start: \"start\";\n    end: \"end\";\n    center: \"center\";\n    justify: \"justify\";\n};\nexport declare type IgxTabsAlignment = (typeof IgxTabsAlignment)[keyof typeof IgxTabsAlignment];\n/**\n * Tabs component is used to organize or switch between similar data sets.\n *\n * @igxModule IgxTabsModule\n *\n * @igxTheme igx-tabs-theme\n *\n * @igxKeywords tabs\n *\n * @igxGroup Layouts\n *\n * @remarks\n * The Ignite UI for Angular Tabs component places tabs at the top and allows for scrolling when there are multiple tab items on the screen.\n *\n * @example\n * ```html\n * <igx-tabs>\n *     <igx-tab-item>\n *         <igx-tab-header>\n *             <igx-icon igxTabHeaderIcon>folder</igx-icon>\n *             <span igxTabHeaderLabel>Tab 1</span>\n *         </igx-tab-header>\n *         <igx-tab-content>\n *             Content 1\n *         </igx-tab-content>\n *     </igx-tab-item>\n *     ...\n * </igx-tabs>\n * ```\n */\nexport declare class IgxTabsComponent extends IgxTabsDirective implements AfterViewInit, OnDestroy {\n    private ngZone;\n    /**\n     * An @Input property which determines the tab alignment. Defaults to `start`.\n     */\n    get tabAlignment(): string | IgxTabsAlignment;\n    set tabAlignment(value: string | IgxTabsAlignment);\n    /** @hidden */\n    headerContainer: ElementRef<HTMLElement>;\n    /** @hidden */\n    viewPort: ElementRef<HTMLElement>;\n    /** @hidden */\n    itemsContainer: ElementRef<HTMLElement>;\n    /** @hidden */\n    selectedIndicator: ElementRef<HTMLElement>;\n    /** @hidden */\n    leftButton: ElementRef<HTMLElement>;\n    /** @hidden */\n    rightButton: ElementRef<HTMLElement>;\n    /** @hidden */\n    defaultClass: boolean;\n    /**  @hidden */\n    offset: number;\n    /** @hidden */\n    protected componentName: string;\n    private _tabAlignment;\n    private _resizeObserver;\n    constructor(builder: AnimationBuilder, ngZone: NgZone);\n    /** @hidden @internal */\n    ngAfterViewInit(): void;\n    /** @hidden @internal */\n    ngOnDestroy(): void;\n    /** @hidden */\n    scrollLeft(): void;\n    /** @hidden */\n    scrollRight(): void;\n    /** @hidden */\n    realignSelectedIndicator(): void;\n    /** @hidden */\n    resolveHeaderScrollClasses(): {\n        'igx-tabs__header-scroll': boolean;\n        'igx-tabs__header-scroll--start': boolean;\n        'igx-tabs__header-scroll--end': boolean;\n        'igx-tabs__header-scroll--center': boolean;\n        'igx-tabs__header-scroll--justify': boolean;\n    };\n    /** @hidden */\n    protected scrollTabHeaderIntoView(): void;\n    /** @hidden */\n    protected getNextTabId(): number;\n    /** @hidden */\n    protected onItemChanges(): void;\n    private alignSelectedIndicator;\n    private hideSelectedIndicator;\n    private scroll;\n    private scrollElement;\n    private updateScrollButtons;\n    private setScrollButtonStyle;\n    private resolveLeftScrollButtonStyle;\n    private resolveRightScrollButtonStyle;\n    private getTabItemsContainerWidth;\n}\n"]}