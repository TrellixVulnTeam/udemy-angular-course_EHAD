import { EventEmitter } from '@angular/core';
import { IgxCalendarComponent } from '../../calendar/public_api';
import { IgxPickerActionsDirective } from '../picker-icons.common';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../directives/button/button.directive';
import * as ɵngcc3 from '../../directives/ripple/ripple.directive';
import * as ɵngcc4 from '../../calendar/calendar.module';
export declare class IgxCalendarContainerComponent {
    calendar: IgxCalendarComponent;
    calendarClose: EventEmitter<any>;
    todaySelection: EventEmitter<any>;
    styleClass: string;
    get dropdownCSS(): boolean;
    get verticalCSS(): boolean;
    vertical: boolean;
    closeButtonLabel: string;
    todayButtonLabel: string;
    mode: string;
    pickerActions: IgxPickerActionsDirective;
    onEscape(event: any): void;
    get isReadonly(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<IgxCalendarContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<IgxCalendarContainerComponent, "igx-calendar-container", never, {}, { "calendarClose": "calendarClose"; "todaySelection": "todaySelection"; }, never, never>;
}
/** @hidden */
export declare class IgxCalendarContainerModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<IgxCalendarContainerModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<IgxCalendarContainerModule, [typeof IgxCalendarContainerComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.IgxButtonModule, typeof ɵngcc3.IgxRippleModule, typeof ɵngcc4.IgxCalendarModule], [typeof IgxCalendarContainerComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<IgxCalendarContainerModule>;
}

//# sourceMappingURL=calendar-container.component.d.ts.map